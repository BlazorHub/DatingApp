@inject IStore Store
@inject IDispatcher Dispatcher
@inject IJSRuntime js

<Router AppAssembly="@typeof(Program).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <p>Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code {
    protected override async Task OnInitializedAsync()
    {
        await Store.InitializeAsync();

        var userJson = await js.InvokeAsync<string>("getUser");

        if (!string.IsNullOrWhiteSpace(userJson))
        {
            var user = JsonSerializer.Deserialize<User>(userJson);
            Dispatcher.Dispatch(new SetCurrentUserAction { User = user });
        }
    }
}